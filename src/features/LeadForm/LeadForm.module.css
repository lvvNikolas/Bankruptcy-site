/* =========================================
   LeadForm.module.css — профессиональные стили формы
   ========================================= */

/* Обёртка формы: сетка + комфортная ширина */
.form{
  display: grid;
  gap: 12px;                 /* базовый вертикальный ритм */
  max-width: 560px;          /* удобно на десктопах */
  width: 100%;
  margin: 0 auto;            /* центрируем, если форма сама — отдельный блок */
}

/* Элемент формы (поле + ошибка) */
.row{
  display: grid;
  gap: 6px;
  text-align: left;          /* чтобы ошибки и подписи не центрировались глобалами */
}

/* Текстовые поля (строго в рамках формы, чтобы не влиять на другие инпуты) */
.form :where(input[type="text"],
             input[type="tel"],
             input[type="number"],
             input:not([type="checkbox"])) {
  width: 100%;
  background: var(--surface);
  border: 1px solid rgba(255,255,255,.10);
  color: var(--text);
  padding: 12px 14px;
  border-radius: 12px;
  transition: border-color .15s ease, box-shadow .15s ease, background-color .15s ease;
  -webkit-appearance: none;
}

/* Плейсхолдеры — чуть мягче */
.form :where(input)::placeholder{
  color: rgba(242,244,247,.55);
}

/* Фокус — фирменное кольцо */
.form :where(input:focus){
  outline: none;
  border-color: rgba(209,162,76,.45);
  box-shadow: var(--ring);       /* определяется в globals.css */
}

/* Ошибки валидации (aria-invalid вешает react-hook-form) */
.form :where(input[aria-invalid="true"]){
  border-color: #ef4444;
  box-shadow: 0 0 0 3px rgba(239,68,68,.20);
}

/* Сообщение об ошибке */
.err{
  color: #ef4444;
  font-size: 13px;
  line-height: 1.3;
}

/* Чекбокс согласия + текст */
.agree{
  display: grid;
  grid-template-columns: 18px 1fr;
  gap: 10px;
  align-items: start;
  color: var(--muted);
  font-size: 14px;
  text-align: left;
}

/* Нативный чекбокс с брендовым цветом */
.agree input[type="checkbox"]{
  margin-top: 2px;
  width: 18px; height: 18px;
  accent-color: var(--brand);             /* поддерживается в современных браузерах */
  cursor: pointer;
}

.agree a{
  color: var(--brand);
  text-decoration: none;
}
.agree a:hover{ opacity: .9; }

/* Кнопку сабмита не переопределяем глобально (используешь .btn .btn-primary).
   Но если захочется локально — можно раскомментировать .submit и применить класс. */
/*
.submit{
  background: var(--brand);
  border: 0;
  color: #111217;
  padding: 12px 16px;
  border-radius: 12px;
  font-weight: 600;
  cursor: pointer;
  transition: transform .06s ease, box-shadow .15s ease;
}
.submit:active{ transform: translateY(1px); }
.submit:focus-visible{ outline: none; box-shadow: var(--ring); }
.submit[aria-disabled="true"], .submit:disabled{ opacity: .65; cursor: default; }
*/

/* Когда кнопка сабмита задизейблена через aria-disabled (из компонента) */
button[aria-disabled="true"], button:disabled{
  opacity: .75;
  cursor: default;
}

/* Адаптивные мелочи */
@media (max-width: 480px){
  .form{ gap: 10px; }
  .row{ gap: 5px; }
  .agree{ grid-template-columns: 16px 1fr; font-size: 13px; }
  .agree input[type="checkbox"]{ width:16px; height:16px; }
}

/* Предпочтение снижения анимаций */
@media (prefers-reduced-motion: reduce){
  *{ transition: none !important; }
}